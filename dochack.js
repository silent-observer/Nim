/* Generated by the Nim Compiler v0.19.9 */
/*   (c) 2019 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI39032 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI186074 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI42862 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI188532 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI76448 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI76444 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI76440 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI76436 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI76432 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI76428 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI76424 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI76420 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI76416 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI76412 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI76408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI76404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI76400 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI76396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI76392 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI76388 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI76384 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI76380 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI76376 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI76372 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI76205 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI76283 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI76281 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI76227 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI76565 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI76563 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI76561 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI76231 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI76229 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI78245 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI42850 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI42858 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI39006 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI56141 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI42808 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI42914 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI39016 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI39040 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI39042 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI42908 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI42826 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI42828 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI42842 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI42846 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI42846 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI42846.node = NNI42846;
var NNI42842 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI42842.node = NNI42842;
var NNI42828 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI42828.node = NNI42828;
NTI42908.base = NTI42826;
NTI42914.base = NTI42826;
var NNI42826 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI42908, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI39042, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI39040, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI39040, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI39016, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI42914, name: "up", sons: null}]};
NTI42826.node = NNI42826;
var NNI42808 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI42808.node = NNI42808;
NTI42826.base = NTI42808;
NTI42828.base = NTI42826;
NTI42842.base = NTI42828;
NTI42846.base = NTI42842;
var NNI56141 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI39042, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI39006, name: "Field1", sons: null}]};
NTI56141.node = NNI56141;
var NNI42858 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI42858.node = NNI42858;
NTI42858.base = NTI42828;
var NNI42850 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI42850.node = NNI42850;
NTI42850.base = NTI42828;
NTI76561.base = NTI76229;
NTI76563.base = NTI76229;
NTI76565.base = NTI76229;
var NNI76227 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI76227, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI76227, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI76227, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI76227, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI76227, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI76227, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI76227, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI76227, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI76227, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI76227, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI76227, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI76227, name: "NotationNode", len: 0, sons: null}}};
NTI76227.node = NNI76227;
var NNI76283 = {kind: 2, len: 91, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI39042, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI39042, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI39042, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI39042, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI39042, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI39042, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI39042, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI39042, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI39042, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI39042, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI39042, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI39042, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI39042, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI39042, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI39042, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI39042, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI39042, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI39042, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI39042, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI39042, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI39042, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI39042, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI39042, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI39042, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI39042, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI39042, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI39042, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI39042, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI39042, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI39042, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI39042, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI39042, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI39042, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI39042, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI39042, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI39042, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI39042, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI39042, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI39042, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI39042, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI39042, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI39042, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI39042, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI39042, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI39042, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI39042, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI39042, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI39042, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI39042, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI39042, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI39042, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI39042, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI39042, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI39042, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI39042, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI39042, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI39042, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI39042, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI39042, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI39042, name: "minWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI39042, name: "overflow", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI39042, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI39042, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI39042, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI39042, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI39042, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI39042, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI39042, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI39042, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI39042, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI39042, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI39042, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI39042, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI39042, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI39042, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI39042, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI39042, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI39042, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI39042, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI39042, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI39042, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI39042, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI39042, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI39042, name: "textTransform", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI39042, name: "transform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI39042, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI39042, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI39042, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI39042, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI39042, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI39006, name: "zIndex", sons: null}]};
NTI76283.node = NNI76283;
NTI76283.base = NTI42808;
NTI76281.base = NTI76283;
var NNI76231 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI76561, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI76563, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI76565, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI39042, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI76229, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI76229, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI76229, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI39042, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI76227, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI39042, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI76229, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI76229, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI39042, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI76281, name: "style", sons: null}]};
NTI76231.node = NNI76231;
var NNI76205 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI76372, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI76376, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI76380, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI76384, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI76388, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI76392, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI76396, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI76400, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI76404, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI76408, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI76412, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI76416, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI76420, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI76424, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI76428, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI76432, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI76436, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI76440, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI76444, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI76448, name: "onunload", sons: null}]};
NTI76205.node = NNI76205;
NTI76205.base = NTI42808;
NTI76231.base = NTI76205;
NTI76229.base = NTI76231;
NTI78245.base = NTI76229;
NTI188532.base = NTI39042;
var NNI42862 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI42862.node = NNI42862;
NTI42862.base = NTI42828;
var NNI186074 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI39006, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI39032, name: "Field1", sons: null}]};
NTI186074.node = NNI186074;

function makeNimstrLit(c_58038) {
		  var ln = c_58038.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_58038.charCodeAt(i);
  }
  return result;
  

	
}

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_59027, src_59028, ti_59029) {
	var result_59219 = null;

		switch (ti_59029.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_59001(ti_59029))) {
			result_59219 = src_59028;
			}
			else {
				result_59219 = [src_59028[0], src_59028[1]];
			}
			
			break;
		case 19:
			      if (dest_59027 === null || dest_59027 === undefined) {
        dest_59027 = {};
      }
      else {
        for (var key in dest_59027) { delete dest_59027[key]; }
      }
      for (var key in src_59028) { dest_59027[key] = src_59028[key]; }
      result_59219 = dest_59027;
    
			break;
		case 18:
		case 17:
			if (!((ti_59029.base == null))) {
			result_59219 = nimCopy(dest_59027, src_59028, ti_59029.base);
			}
			else {
			if ((ti_59029.kind == 17)) {
			result_59219 = (dest_59027 === null || dest_59027 === undefined) ? {m_type: ti_59029} : dest_59027;
			}
			else {
				result_59219 = (dest_59027 === null || dest_59027 === undefined) ? {} : dest_59027;
			}
			}
			nimCopyAux(result_59219, src_59028, ti_59029.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_59028 === null) {
        result_59219 = null;
      }
      else {
        if (dest_59027 === null || dest_59027 === undefined) {
          dest_59027 = new Array(src_59028.length);
        }
        else {
          dest_59027.length = src_59028.length;
        }
        result_59219 = dest_59027;
        for (var i = 0; i < src_59028.length; ++i) {
          result_59219[i] = nimCopy(result_59219[i], src_59028[i], ti_59029.base);
        }
      }
    
			break;
		case 28:
			      if (src_59028 !== null) {
        result_59219 = src_59028.slice(0);
      }
    
			break;
		default: 
			result_59219 = src_59028;
			break;
		}

	return result_59219;

}

function arrayConstr(len_59271, value_59272, typ_59273) {
		    var result = new Array(len_59271);
    for (var i = 0; i < len_59271; ++i) result[i] = nimCopy(null, value_59272, typ_59273);
    return result;
  

	
}

function cstrToNimstr(c_58055) {
		  var ln = c_58055.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_58055.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_58055.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function toJSStr(s_58072) {
		  if (s_58072 === null) return "";
  var len = s_58072.length;
  var asciiPart = new Array(len);
  var fcc = String.fromCharCode;
  var nonAsciiPart = null;
  var nonAsciiOffset = 0;
  for (var i = 0; i < len; ++i) {
    if (nonAsciiPart !== null) {
      var offset = (i - nonAsciiOffset) * 2;
      var code = s_58072[i].toString(16);
      if (code.length == 1) {
        code = "0"+code;
      }
      nonAsciiPart[offset] = "%";
      nonAsciiPart[offset + 1] = code;
    }
    else if (s_58072[i] < 128)
      asciiPart[i] = fcc(s_58072[i]);
    else {
      asciiPart.length = i;
      nonAsciiOffset = i;
      nonAsciiPart = new Array((len - i) * 2);
      --i;
    }
  }
  asciiPart = asciiPart.join("");
  return (nonAsciiPart === null) ?
      asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function raiseException(e_56618, ename_56619) {
		e_56618.name = ename_56619;
		if ((excHandler == 0)) {
		unhandledException(e_56618);
		}
		
		e_56618.trace = nimCopy(null, raw_write_stack_trace_56438(), NTI39040);
		throw e_56618;

	
}

function addInt(a_58403, b_58404) {
		    var result = a_58403 + b_58404;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function chckIndx(i_59290, a_59291, b_59292) {
			var Tmp1;

	var result_59293 = 0;

	BeforeRet: do {
			if (!(a_59291 <= i_59290)) Tmp1 = false; else {				Tmp1 = (i_59290 <= b_59292);			}		if (Tmp1) {
		result_59293 = i_59290;
		break BeforeRet;
		}
		else {
		raiseIndexError(i_59290, a_59291, b_59292);
		}
		
	} while (false);

	return result_59293;

}

function subInt(a_58421, b_58422) {
		    var result = a_58421 - b_58422;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
var ConstSet2 = setConstr([65, 90]);

function chckRange(i_59309, a_59310, b_59311) {
			var Tmp1;

	var result_59312 = 0;

	BeforeRet: do {
			if (!(a_59310 <= i_59309)) Tmp1 = false; else {				Tmp1 = (i_59309 <= b_59311);			}		if (Tmp1) {
		result_59312 = i_59309;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_59312;

}
var ConstSet3 = setConstr(95, 32, 46);
var ConstSet4 = setConstr(95, 32, 46);

function mulInt(a_58439, b_58440) {
		    var result = a_58439 * b_58440;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
var ConstSet5 = setConstr([97, 122]);
var ConstSet6 = setConstr([65, 90], [97, 122]);
var ConstSet7 = setConstr([97, 122]);
var ConstSet8 = setConstr([65, 90]);

function nimMax(a_58758, b_58759) {
		var Tmp1;

	var result_58760 = 0;

	BeforeRet: do {
		if ((b_58759 <= a_58758)) {
		Tmp1 = a_58758;
		}
		else {
		Tmp1 = b_58759;
		}
		
		result_58760 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_58760;

}

function nimMin(a_58740, b_58741) {
		var Tmp1;

	var result_58742 = 0;

	BeforeRet: do {
		if ((a_58740 <= b_58741)) {
		Tmp1 = a_58740;
		}
		else {
		Tmp1 = b_58741;
		}
		
		result_58742 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_58742;

}
var nim_program_result = 0;
var global_raise_hook_52818 = [null];
var local_raise_hook_52823 = [null];
var out_of_mem_hook_52826 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var alternative_188285 = [null];

function is_fat_pointer_59001(ti_59003) {
	var result_59004 = false;

	BeforeRet: do {
		result_59004 = !((ConstSet1[ti_59003.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_59004;

}

function nimCopyAux(dest_59032, src_59033, n_59035) {
		switch (n_59035.kind) {
		case 0:
			break;
		case 1:
			      dest_59032[n_59035.offset] = nimCopy(dest_59032[n_59035.offset], src_59033[n_59035.offset], n_59035.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_59035.sons.length; i++) {
      nimCopyAux(dest_59032, src_59033, n_59035.sons[i]);
    }
    
			break;
		case 3:
			      dest_59032[n_59035.offset] = nimCopy(dest_59032[n_59035.offset], src_59033[n_59035.offset], n_59035.typ);
      for (var i = 0; i < n_59035.sons.length; ++i) {
        nimCopyAux(dest_59032, src_59033, n_59035.sons[i][1]);
      }
    
			break;
		}

	
}

function add_52838(x_52841, x_52841_Idx, y_52842) {
		      if (x_52841[x_52841_Idx] === null) { x_52841[x_52841_Idx] = []; }
      var off = x_52841[x_52841_Idx].length;
      x_52841[x_52841_Idx].length += y_52842.length;
      for (var i = 0; i < y_52842.length; ++i) {
        x_52841[x_52841_Idx][off+i] = y_52842.charCodeAt(i);
      }
    

	
}

function aux_write_stack_trace_56136(f_56138) {
					var Tmp3;

	var result_56139 = [null];

		var it_56147 = f_56138;
		var i_56149 = 0;
		var total_56151 = 0;
		var temp_frames_56158 = arrayConstr(64, {Field0: null, Field1: 0}, NTI56141);
		L1: do {
				L2: while (true) {
					if (!!((it_56147 == null))) Tmp3 = false; else {						Tmp3 = (i_56149 <= 63);					}				if (!Tmp3) break L2;
					temp_frames_56158[i_56149].Field0 = it_56147.procname;
					temp_frames_56158[i_56149].Field1 = it_56147.line;
					i_56149 += 1;
					total_56151 += 1;
					it_56147 = it_56147.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_56147 == null))) break L5;
					total_56151 += 1;
					it_56147 = it_56147.prev;
				}
		} while(false);
		result_56139[0] = nimCopy(null, [], NTI39040);
		if (!((total_56151 == i_56149))) {
		if (result_56139[0] != null) { result_56139[0] = (result_56139[0]).concat(makeNimstrLit("(")); } else { result_56139[0] = makeNimstrLit("("); };
		if (result_56139[0] != null) { result_56139[0] = (result_56139[0]).concat(cstrToNimstr(((total_56151 - i_56149))+"")); } else { result_56139[0] = cstrToNimstr(((total_56151 - i_56149))+"").slice(); };
		if (result_56139[0] != null) { result_56139[0] = (result_56139[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_56139[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
		}
		
		L6: do {
			var j_56421 = 0;
			var colontmp__188426 = 0;
			colontmp__188426 = (i_56149 - 1);
			var res_188431 = colontmp__188426;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_188431)) break L8;
						j_56421 = res_188431;
						add_52838(result_56139, 0, temp_frames_56158[j_56421].Field0);
						if ((0 < temp_frames_56158[j_56421].Field1)) {
						if (result_56139[0] != null) { result_56139[0] = (result_56139[0]).concat(makeNimstrLit(", line: ")); } else { result_56139[0] = makeNimstrLit(", line: "); };
						if (result_56139[0] != null) { result_56139[0] = (result_56139[0]).concat(cstrToNimstr((temp_frames_56158[j_56421].Field1)+"")); } else { result_56139[0] = cstrToNimstr((temp_frames_56158[j_56421].Field1)+"").slice(); };
						}
						
						if (result_56139[0] != null) { result_56139[0] = (result_56139[0]).concat(makeNimstrLit("\x0A")); } else { result_56139[0] = makeNimstrLit("\x0A"); };
						res_188431 -= 1;
					}
			} while(false);
		} while(false);

	return result_56139[0];

}

function raw_write_stack_trace_56438() {
	var result_56440 = null;

		if (!((framePtr == null))) {
		result_56440 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(aux_write_stack_trace_56136(framePtr) || []), NTI39040);
		}
		else {
			result_56440 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI39040);
		}
		

	return result_56440;

}

function unhandledException(e_56499) {
		var buf_56500 = [[]];
		if (!(((e_56499.message != null ? e_56499.message.length : 0) == 0))) {
		if (buf_56500[0] != null) { buf_56500[0] = (buf_56500[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_56500[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_56500[0] != null) { buf_56500[0] = (buf_56500[0]).concat(e_56499.message); } else { buf_56500[0] = e_56499.message.slice(); };
		}
		else {
		if (buf_56500[0] != null) { buf_56500[0] = (buf_56500[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_56500[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_56500[0] != null) { buf_56500[0] = (buf_56500[0]).concat(makeNimstrLit(" [")); } else { buf_56500[0] = makeNimstrLit(" ["); };
		add_52838(buf_56500, 0, e_56499.name);
		if (buf_56500[0] != null) { buf_56500[0] = (buf_56500[0]).concat(makeNimstrLit("]\x0A")); } else { buf_56500[0] = makeNimstrLit("]\x0A"); };
		if (buf_56500[0] != null) { buf_56500[0] = (buf_56500[0]).concat(raw_write_stack_trace_56438()); } else { buf_56500[0] = raw_write_stack_trace_56438().slice(); };
		var cbuf_56601 = toJSStr(buf_56500[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_56601);
  }
  else {
    throw cbuf_56601;
  }
  

	
}

function raiseOverflow() {
		var e_57026 = null;
		e_57026 = {m_type: NTI42846, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_57026.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI39040);
		e_57026.parent = null;
		raiseException(e_57026, "OverflowError");

	
}

function is_whitespace_187639(text_187641) {
		     return !/[^\s]/.test(text_187641);
  

	
}

function is_whitespace_187656(x_187658) {
		var Tmp1;
		var Tmp2;

	var result_187659 = false;

	var F={procname:"dochack.isWhitespace",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 134;
		if (!(x_187658.nodeName == "#text")) Tmp2 = false; else {			Tmp2 = is_whitespace_187639(x_187658.textContent);		}		if (Tmp2) Tmp1 = true; else {			Tmp1 = (x_187658.nodeName == "#comment");		}		result_187659 = Tmp1;
	framePtr = F.prev;

	return result_187659;

}

function raiseIndexError(i_57623, a_57624, b_57625) {
		var e_57629 = null;
		e_57629 = {m_type: NTI42858, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_57629.message = nimCopy(null, (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_57623)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_57624)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_57625)+"") || []), NTI39040);
		e_57629.parent = null;
		raiseException(e_57629, "IndexError");

	
}

function to_toc_187673(x_187675, father_187676) {
								var Tmp5;
						var Tmp6;
						var Tmp7;
						var Tmp8;
			var Tmp15;

	var F={procname:"dochack.toToc",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		if ((x_187675.nodeName == "UL")) {
		F.line = 139;
		var f_187695 = {heading: null, kids: [], sortId: (father_187676.kids != null ? father_187676.kids.length : 0), doSort: false};
		F.line = 140;
		var i_187697 = 0;
		L1: do {
			F.line = 141;
				L2: while (true) {
				if (!(i_187697 < x_187675.childNodes.length)) break L2;
					F.line = 142;
					var nxt_187698 = addInt(i_187697, 1);
					L3: do {
						F.line = 143;
							L4: while (true) {
								if (!(nxt_187698 < x_187675.childNodes.length)) Tmp5 = false; else {									Tmp5 = is_whitespace_187656(x_187675.childNodes[nxt_187698]);								}							if (!Tmp5) break L4;
								F.line = 144;
								nxt_187698 = addInt(nxt_187698, 1);
							}
					} while(false);
						if (!(nxt_187698 < x_187675.childNodes.length)) Tmp8 = false; else {							Tmp8 = (x_187675.childNodes[i_187697].nodeName == "LI");						}						if (!Tmp8) Tmp7 = false; else {							Tmp7 = (x_187675.childNodes[i_187697].childNodes.length == 1);						}						if (!Tmp7) Tmp6 = false; else {							Tmp6 = (x_187675.childNodes[nxt_187698].nodeName == "UL");						}					if (Tmp6) {
					F.line = 147;
					var e_187723 = {heading: x_187675.childNodes[i_187697].childNodes[0], kids: [], sortId: (f_187695.kids != null ? f_187695.kids.length : 0), doSort: false};
					F.line = 148;
					var it_187724 = x_187675.childNodes[nxt_187698];
					L9: do {
						F.line = 149;
						var j_187731 = 0;
						F.line = 3113;
						var colontmp__188402 = 0;
						F.line = 149;
						colontmp__188402 = it_187724.childNodes.length;
						F.line = 3114;
						var i_188403 = 0;
						L10: do {
							F.line = 3115;
								L11: while (true) {
								if (!(i_188403 < colontmp__188402)) break L11;
									F.line = 149;
									j_187731 = i_188403;
									F.line = 150;
									to_toc_187673(it_187724.childNodes[j_187731], e_187723);
									F.line = 3117;
									i_188403 = addInt(i_188403, 1);
								}
						} while(false);
					} while(false);
					F.line = 151;
					if (f_187695.kids != null) { f_187695.kids.push(e_187723); } else { f_187695.kids = [e_187723]; };
					F.line = 152;
					i_187697 = addInt(nxt_187698, 1);
					}
					else {
						F.line = 154;
						to_toc_187673(x_187675.childNodes[i_187697], f_187695);
						F.line = 155;
						i_187697 = addInt(i_187697, 1);
					}
					
				}
		} while(false);
		F.line = 156;
		if (father_187676.kids != null) { father_187676.kids.push(f_187695); } else { father_187676.kids = [f_187695]; };
		}
		else {
		if (is_whitespace_187656(x_187675)) {
		}
		else {
		if ((x_187675.nodeName == "LI")) {
		F.line = 160;
		var idx_187766 = [];
		L12: do {
			F.line = 161;
			var i_187773 = 0;
			F.line = 3113;
			var colontmp__188407 = 0;
			F.line = 161;
			colontmp__188407 = x_187675.childNodes.length;
			F.line = 3114;
			var i_188408 = 0;
			L13: do {
				F.line = 3115;
					L14: while (true) {
					if (!(i_188408 < colontmp__188407)) break L14;
						F.line = 161;
						i_187773 = i_188408;
						if (!(is_whitespace_187656(x_187675.childNodes[i_187773]))) {
						F.line = 162;
						if (idx_187766 != null) { idx_187766.push(i_187773); } else { idx_187766 = [i_187773]; };
						}
						
						F.line = 3117;
						i_188408 = addInt(i_188408, 1);
					}
			} while(false);
		} while(false);
			if (!((idx_187766 != null ? idx_187766.length : 0) == 2)) Tmp15 = false; else {				Tmp15 = (x_187675.childNodes[idx_187766[chckIndx(1, 0, idx_187766.length+0-1)-0]].nodeName == "UL");			}		if (Tmp15) {
		F.line = 164;
		var e_187804 = {heading: x_187675.childNodes[idx_187766[chckIndx(0, 0, idx_187766.length+0-1)-0]], kids: [], sortId: (father_187676.kids != null ? father_187676.kids.length : 0), doSort: false};
		F.line = 166;
		var it_187805 = x_187675.childNodes[idx_187766[chckIndx(1, 0, idx_187766.length+0-1)-0]];
		L16: do {
			F.line = 167;
			var j_187812 = 0;
			F.line = 3113;
			var colontmp__188413 = 0;
			F.line = 167;
			colontmp__188413 = it_187805.childNodes.length;
			F.line = 3114;
			var i_188414 = 0;
			L17: do {
				F.line = 3115;
					L18: while (true) {
					if (!(i_188414 < colontmp__188413)) break L18;
						F.line = 167;
						j_187812 = i_188414;
						F.line = 168;
						to_toc_187673(it_187805.childNodes[j_187812], e_187804);
						F.line = 3117;
						i_188414 = addInt(i_188414, 1);
					}
			} while(false);
		} while(false);
		F.line = 169;
		if (father_187676.kids != null) { father_187676.kids.push(e_187804); } else { father_187676.kids = [e_187804]; };
		}
		else {
			L19: do {
				F.line = 171;
				var i_187826 = 0;
				F.line = 3113;
				var colontmp__188418 = 0;
				F.line = 171;
				colontmp__188418 = x_187675.childNodes.length;
				F.line = 3114;
				var i_188419 = 0;
				L20: do {
					F.line = 3115;
						L21: while (true) {
						if (!(i_188419 < colontmp__188418)) break L21;
							F.line = 171;
							i_187826 = i_188419;
							F.line = 172;
							to_toc_187673(x_187675.childNodes[i_187826], father_187676);
							F.line = 3117;
							i_188419 = addInt(i_188419, 1);
						}
				} while(false);
			} while(false);
		}
		
		}
		else {
			F.line = 174;
		if (father_187676.kids != null) { father_187676.kids.push({heading: x_187675, kids: [], sortId: (father_187676.kids != null ? father_187676.kids.length : 0), doSort: false}); } else { father_187676.kids = [{heading: x_187675, kids: [], sortId: (father_187676.kids != null ? father_187676.kids.length : 0), doSort: false}]; };
		}
		}}
	framePtr = F.prev;

	
}

function extract_items_187307(x_187309, heading_187310, items_187313, items_187313_Idx) {
			var Tmp1;

	var F={procname:"dochack.extractItems",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((x_187309 == null)) {
		F.line = 81;
		break BeforeRet;
		}
		
			if (!!((x_187309.heading == null))) Tmp1 = false; else {				Tmp1 = (x_187309.heading.textContent == heading_187310);			}		if (Tmp1) {
		L2: do {
			F.line = 83;
			var i_187341 = 0;
			F.line = 3113;
			var colontmp__188443 = 0;
			F.line = 83;
			colontmp__188443 = (x_187309.kids != null ? x_187309.kids.length : 0);
			F.line = 3114;
			var i_188444 = 0;
			L3: do {
				F.line = 3115;
					L4: while (true) {
					if (!(i_188444 < colontmp__188443)) break L4;
						F.line = 83;
						i_187341 = i_188444;
						F.line = 84;
						if (items_187313[items_187313_Idx] != null) { items_187313[items_187313_Idx].push(x_187309.kids[chckIndx(i_187341, 0, x_187309.kids.length+0-1)-0].heading); } else { items_187313[items_187313_Idx] = [x_187309.kids[chckIndx(i_187341, 0, x_187309.kids.length+0-1)-0].heading]; };
						F.line = 3117;
						i_188444 = addInt(i_188444, 1);
					}
			} while(false);
		} while(false);
		}
		else {
			L5: do {
				F.line = 86;
				var i_187360 = 0;
				F.line = 3113;
				var colontmp__188448 = 0;
				F.line = 86;
				colontmp__188448 = (x_187309.kids != null ? x_187309.kids.length : 0);
				F.line = 3114;
				var i_188449 = 0;
				L6: do {
					F.line = 3115;
						L7: while (true) {
						if (!(i_188449 < colontmp__188448)) break L7;
							F.line = 86;
							i_187360 = i_188449;
							F.line = 87;
							var it_187361 = x_187309.kids[chckIndx(i_187360, 0, x_187309.kids.length+0-1)-0];
							F.line = 88;
							extract_items_187307(it_187361, heading_187310, items_187313, items_187313_Idx);
							F.line = 3117;
							i_188449 = addInt(i_188449, 1);
						}
				} while(false);
			} while(false);
		}
		
	} while (false);
	framePtr = F.prev;

	
}

function tree_187020(tag_187022, kids_187024) {
	var result_187025 = null;

	var F={procname:"dochack.tree",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 11;
		result_187025 = document.createElement(toJSStr(tag_187022));
		L1: do {
			F.line = 12;
			var k_187056 = null;
			F.line = 2337;
			var i_188466 = 0;
			L2: do {
				F.line = 2338;
					L3: while (true) {
					if (!(i_188466 < (kids_187024 != null ? kids_187024.length : 0))) break L3;
						F.line = 12;
						k_187056 = kids_187024[chckIndx(i_188466, 0, kids_187024.length+0-1)-0];
						F.line = 13;
						result_187025.appendChild(k_187056);
						F.line = 2340;
						i_188466 = addInt(i_188466, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_187025;

}

function text_187122(s_187124) {
	var result_187125 = null;

	var F={procname:"dochack.text",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 27;
		result_187125 = document.createTextNode(s_187124);
	framePtr = F.prev;

	return result_187125;

}

function sys_fatal_61836(message_61840) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"../../lib/system.nim",line:0};
	framePtr = F;
		F.line = 3070;
		var e_62002 = null;
		F.line = 3071;
		e_62002 = {m_type: NTI42850, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 3072;
		e_62002.message = nimCopy(null, message_61840, NTI39040);
		F.line = 3073;
		raiseException(e_62002, "AssertionError");
	framePtr = F.prev;

	
}

function raise_assert_61832(msg_61834) {
	var F={procname:"system.raiseAssert",prev:framePtr,filename:"../../lib/system.nim",line:0};
	framePtr = F;
		F.line = 3791;
		sys_fatal_61836(msg_61834);
	framePtr = F.prev;

	
}

function failed_assert_impl_62035(msg_62037) {
	var F={procname:"system.failedAssertImpl",prev:framePtr,filename:"../../lib/system.nim",line:0};
	framePtr = F;
		F.line = 3798;
		raise_assert_61832(msg_62037);
	framePtr = F.prev;

	
}

function uncovered_187920(x_187922) {
			var Tmp1;
		var Tmp2;

	var result_187923 = null;

	var F={procname:"dochack.uncovered",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
	BeforeRet: do {
			if (!((x_187922.kids != null ? x_187922.kids.length : 0) == 0)) Tmp1 = false; else {				Tmp1 = !((x_187922.heading == null));			}		if (Tmp1) {
		F.line = 194;
		if (!(x_187922.heading.hasOwnProperty('__karaxMarker__'))) {
		Tmp2 = x_187922;
		}
		else {
		Tmp2 = null;
		}
		
		result_187923 = Tmp2;
		break BeforeRet;
		}
		
		F.line = 195;
		result_187923 = {heading: x_187922.heading, kids: [], sortId: x_187922.sortId, doSort: x_187922.doSort};
		L3: do {
			F.line = 197;
			var i_187961 = 0;
			F.line = 3113;
			var colontmp__188478 = 0;
			F.line = 197;
			colontmp__188478 = (x_187922.kids != null ? x_187922.kids.length : 0);
			F.line = 3114;
			var i_188479 = 0;
			L4: do {
				F.line = 3115;
					L5: while (true) {
					if (!(i_188479 < colontmp__188478)) break L5;
						F.line = 197;
						i_187961 = i_188479;
						F.line = 198;
						var y_187962 = uncovered_187920(x_187922.kids[chckIndx(i_187961, 0, x_187922.kids.length+0-1)-0]);
						if (!((y_187962 == null))) {
						F.line = 199;
						if (result_187923.kids != null) { result_187923.kids.push(y_187962); } else { result_187923.kids = [y_187962]; };
						}
						
						F.line = 3117;
						i_188479 = addInt(i_188479, 1);
					}
			} while(false);
		} while(false);
		if (((result_187923.kids != null ? result_187923.kids.length : 0) == 0)) {
		F.line = 200;
		result_187923 = null;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_187923;

}

function merge_tocs_187996(orig_187998, news_187999) {
	var result_188000 = null;

	var F={procname:"dochack.mergeTocs",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 203;
		result_188000 = uncovered_187920(orig_187998);
		if ((result_188000 == null)) {
		F.line = 205;
		result_188000 = news_187999;
		}
		else {
			L1: do {
				F.line = 207;
				var i_188020 = 0;
				F.line = 3113;
				var colontmp__188472 = 0;
				F.line = 207;
				colontmp__188472 = (news_187999.kids != null ? news_187999.kids.length : 0);
				F.line = 3114;
				var i_188473 = 0;
				L2: do {
					F.line = 3115;
						L3: while (true) {
						if (!(i_188473 < colontmp__188472)) break L3;
							F.line = 207;
							i_188020 = i_188473;
							F.line = 208;
							if (result_188000.kids != null) { result_188000.kids.push(news_187999.kids[chckIndx(i_188020, 0, news_187999.kids.length+0-1)-0]); } else { result_188000.kids = [news_187999.kids[chckIndx(i_188020, 0, news_187999.kids.length+0-1)-0]]; };
							F.line = 3117;
							i_188473 = addInt(i_188473, 1);
						}
				} while(false);
			} while(false);
		}
		
	framePtr = F.prev;

	return result_188000;

}

function build_toc_188041(orig_188043, types_188045, procs_188046) {
	var result_188047 = null;

	var F={procname:"dochack.buildToc",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 211;
		var new_stuff_188061 = {heading: null, kids: [], doSort: true, sortId: 0};
		L1: do {
			F.line = 212;
			var t_188214 = null;
			F.line = 3839;
			var i_188461 = 0;
			F.line = 3840;
			var l_188462 = (types_188045 != null ? types_188045.length : 0);
			L2: do {
				F.line = 3841;
					L3: while (true) {
					if (!(i_188461 < l_188462)) break L3;
						F.line = 212;
						t_188214 = types_188045[chckIndx(i_188461, 0, types_188045.length+0-1)-0];
						F.line = 213;
						var c_188228 = {heading: t_188214.cloneNode(true), kids: [], doSort: true, sortId: 0};
						F.line = 214;
						t_188214.__karaxMarker__ = true;
						L4: do {
							F.line = 215;
							var p_188235 = null;
							F.line = 3839;
							var i_188458 = 0;
							F.line = 3840;
							var l_188459 = (procs_188046 != null ? procs_188046.length : 0);
							L5: do {
								F.line = 3841;
									L6: while (true) {
									if (!(i_188458 < l_188459)) break L6;
										F.line = 215;
										p_188235 = procs_188046[chckIndx(i_188458, 0, procs_188046.length+0-1)-0];
										if (!(p_188235.hasOwnProperty('__karaxMarker__'))) {
										F.line = 217;
										var xx_188236 = p_188235.parentNode.getElementsByClassName("attachedType");
										if ((((xx_188236 != null ? xx_188236.length : 0) == 1) && (xx_188236[chckIndx(0, 0, xx_188236.length+0-1)-0].textContent == t_188214.textContent))) {
										F.line = 220;
										var q_188244 = tree_187020(makeNimstrLit("A"), [text_187122(p_188235.title)]);
										F.line = 221;
										q_188244.setAttribute("href", p_188235.getAttribute("href"));
										F.line = 222;
										if (c_188228.kids != null) { c_188228.kids.push({heading: q_188244, kids: [], sortId: 0, doSort: false}); } else { c_188228.kids = [{heading: q_188244, kids: [], sortId: 0, doSort: false}]; };
										F.line = 223;
										p_188235.__karaxMarker__ = true;
										}
										
										}
										
										F.line = 3843;
										i_188458 = addInt(i_188458, 1);
										if (!(((procs_188046 != null ? procs_188046.length : 0) == l_188459))) {
										F.line = 3844;
										failed_assert_impl_62035(makeNimstrLit("/Users/travis/build/nim-lang/Nim/lib/system.nim(3844, 11) `len(a) == L` seq modified while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						F.line = 224;
						if (new_stuff_188061.kids != null) { new_stuff_188061.kids.push(c_188228); } else { new_stuff_188061.kids = [c_188228]; };
						F.line = 3843;
						i_188461 = addInt(i_188461, 1);
						if (!(((types_188045 != null ? types_188045.length : 0) == l_188462))) {
						F.line = 3844;
						failed_assert_impl_62035(makeNimstrLit("/Users/travis/build/nim-lang/Nim/lib/system.nim(3844, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 225;
		result_188047 = merge_tocs_187996(orig_188043, new_stuff_188061);
	framePtr = F.prev;

	return result_188047;

}

function add_187070(parent_187072, kid_187073) {
			var Tmp1;
				var Tmp2;

	var F={procname:"dochack.add",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
			if (!(parent_187072.nodeName == "TR")) Tmp1 = false; else {				if ((kid_187073.nodeName == "TD")) Tmp2 = true; else {					Tmp2 = (kid_187073.nodeName == "TH");				}				Tmp1 = Tmp2;			}		if (Tmp1) {
		F.line = 18;
		var k_187074 = document.createElement("TD");
		F.line = 19;
		k_187074.appendChild(kid_187073);
		F.line = 20;
		parent_187072.appendChild(k_187074);
		}
		else {
			F.line = 22;
		parent_187072.appendChild(kid_187073);
		}
		
	framePtr = F.prev;

	
}

function set_class_187088(e_187090, value_187091) {
	var F={procname:"dochack.setClass",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 25;
		e_187090.setAttribute("class", toJSStr(value_187091));
	framePtr = F.prev;

	
}

function to_html_187375(x_187377, is_root_187378) {
			var Tmp1;

		function HEX3Aanonymous_187418(a_187420, b_187421) {
					var Tmp1;

			var result_187422 = 0;

			var F={procname:"toHtml.:anonymous",prev:framePtr,filename:"dochack.nim",line:0};
			framePtr = F;
			BeforeRet: do {
					if (!!((a_187420.heading == null))) Tmp1 = false; else {						Tmp1 = !((b_187421.heading == null));					}				if (Tmp1) {
				F.line = 106;
				var x_187439 = a_187420.heading.textContent;
				F.line = 107;
				var y_187440 = b_187421.heading.textContent;
				if ((x_187439 < y_187440)) {
				F.line = 108;
				result_187422 = -1;
				break BeforeRet;
				}
				
				if ((y_187440 < x_187439)) {
				F.line = 109;
				result_187422 = 1;
				break BeforeRet;
				}
				
				F.line = 110;
				result_187422 = 0;
				break BeforeRet;
				}
				else {
					F.line = 113;
					result_187422 = subInt(a_187420.sortId, b_187421.sortId);
					break BeforeRet;
				}
				
			} while (false);
			framePtr = F.prev;

			return result_187422;

		}

	var result_187379 = null;

	var F={procname:"dochack.toHtml",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((x_187377 == null)) {
		F.line = 91;
		result_187379 = null;
		break BeforeRet;
		}
		
		if (((x_187377.kids != null ? x_187377.kids.length : 0) == 0)) {
		if ((x_187377.heading == null)) {
		F.line = 93;
		result_187379 = null;
		break BeforeRet;
		}
		
		F.line = 94;
		result_187379 = x_187377.heading.cloneNode(true);
		break BeforeRet;
		}
		
		F.line = 95;
		result_187379 = tree_187020(makeNimstrLit("DIV"), []);
			if (!!((x_187377.heading == null))) Tmp1 = false; else {				Tmp1 = !(x_187377.heading.hasOwnProperty('__karaxMarker__'));			}		if (Tmp1) {
		F.line = 97;
		add_187070(result_187379, x_187377.heading.cloneNode(true));
		}
		
		F.line = 98;
		var ul_187415 = tree_187020(makeNimstrLit("UL"), []);
		if (is_root_187378) {
		F.line = 100;
		set_class_187088(ul_187415, makeNimstrLit("simple simple-toc"));
		}
		else {
			F.line = 102;
		set_class_187088(ul_187415, makeNimstrLit("simple"));
		}
		
		if (x_187377.doSort) {
		F.line = 104;
		x_187377.kids.sort(HEX3Aanonymous_187418);
		}
		
		L2: do {
			F.line = 115;
			var k_187614 = null;
			F.line = 3837;
			var colontmp__188485 = null;
			F.line = 115;
			colontmp__188485 = x_187377.kids;
			F.line = 3839;
			var i_188487 = 0;
			F.line = 3840;
			var l_188488 = (colontmp__188485 != null ? colontmp__188485.length : 0);
			L3: do {
				F.line = 3841;
					L4: while (true) {
					if (!(i_188487 < l_188488)) break L4;
						F.line = 115;
						k_187614 = colontmp__188485[chckIndx(i_188487, 0, colontmp__188485.length+0-1)-0];
						F.line = 116;
						var y_187615 = to_html_187375(k_187614, false);
						if (!((y_187615 == null))) {
						F.line = 118;
						add_187070(ul_187415, tree_187020(makeNimstrLit("LI"), [y_187615]));
						}
						
						F.line = 3843;
						i_188487 = addInt(i_188487, 1);
						if (!(((colontmp__188485 != null ? colontmp__188485.length : 0) == l_188488))) {
						F.line = 3844;
						failed_assert_impl_62035(makeNimstrLit("/Users/travis/build/nim-lang/Nim/lib/system.nim(3844, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		if (!((ul_187415.childNodes.length == 0))) {
		F.line = 119;
		add_187070(result_187379, ul_187415);
		}
		
		if ((result_187379.childNodes.length == 0)) {
		F.line = 120;
		result_187379 = null;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_187379;

}

function replace_by_id_187142(id_187144, new_tree_187145) {
	var F={procname:"dochack.replaceById",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 32;
		var x_187146 = document.getElementById(id_187144);
		F.line = 33;
		x_187146.parentNode.replaceChild(new_tree_187145, x_187146);
		F.line = 34;
		new_tree_187145.id = id_187144;
	framePtr = F.prev;

	
}

function togglevis_188299(d_188301) {
	var F={procname:"dochack.togglevis",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 230;
		    if (d_188301.style.display == 'none')
      d_188301.style.display = 'inline';
    else
      d_188301.style.display = 'none';
  
	framePtr = F.prev;

	
}

function groupBy(value_188317) {
	var F={procname:"dochack.groupBy",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 238;
		var toc_188318 = document.getElementById("toc-list");
		if ((alternative_188285[0] == null)) {
		F.line = 240;
		var tt_188337 = {heading: null, kids: [], sortId: 0, doSort: false};
		F.line = 241;
		to_toc_187673(toc_188318, tt_188337);
		F.line = 242;
		tt_188337 = tt_188337.kids[chckIndx(0, 0, tt_188337.kids.length+0-1)-0];
		F.line = 244;
		var types_188352 = [[]];
		F.line = 245;
		var procs_188367 = [[]];
		F.line = 247;
		extract_items_187307(tt_188337, "Types", types_188352, 0);
		F.line = 248;
		extract_items_187307(tt_188337, "Procs", procs_188367, 0);
		F.line = 249;
		extract_items_187307(tt_188337, "Converters", procs_188367, 0);
		F.line = 250;
		extract_items_187307(tt_188337, "Methods", procs_188367, 0);
		F.line = 251;
		extract_items_187307(tt_188337, "Templates", procs_188367, 0);
		F.line = 252;
		extract_items_187307(tt_188337, "Macros", procs_188367, 0);
		F.line = 253;
		extract_items_187307(tt_188337, "Iterators", procs_188367, 0);
		F.line = 255;
		var ntoc_188375 = build_toc_188041(tt_188337, types_188352[0], procs_188367[0]);
		F.line = 256;
		var x_188376 = to_html_187375(ntoc_188375, true);
		F.line = 257;
		alternative_188285[0] = tree_187020(makeNimstrLit("DIV"), [x_188376]);
		}
		
		if ((value_188317 == "type")) {
		F.line = 259;
		replace_by_id_187142("tocRoot", alternative_188285[0]);
		}
		else {
			F.line = 261;
		replace_by_id_187142("tocRoot", tree_187020(makeNimstrLit("DIV"), []));
		}
		
		F.line = 262;
		togglevis_188299(document.getElementById("toc-list"));
	framePtr = F.prev;

	
}
var db_188491 = [null];
var contents_188493 = [null];
var oldtoc_188742 = [null];
var timer_188743 = [null];

function raiseRangeError() {
		var e_57425 = null;
		e_57425 = {m_type: NTI42862, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_57425.message = nimCopy(null, makeNimstrLit("value out of range"), NTI39040);
		e_57425.parent = null;
		raiseException(e_57425, "RangeError");

	
}

function nsuToLowerAsciiChar(c_175980) {
	var result_175981 = 0;

	var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"../../lib/pure/strutils.nim",line:0};
	framePtr = F;
		if ((ConstSet2[c_175980] != undefined)) {
		F.line = 222;
		result_175981 = chckRange(addInt(c_175980, 32), 0, 255);
		}
		else {
			F.line = 224;
			result_175981 = c_175980;
		}
		
	framePtr = F.prev;

	return result_175981;

}

function fuzzy_match_186070(pattern_186072, str_186073) {
							var Tmp4;
							var Tmp5;
								var Tmp6;

	var result_186077 = {Field0: 0, Field1: false};

	var F={procname:"fuzzysearch.fuzzyMatch",prev:framePtr,filename:"fuzzysearch.nim",line:0};
	framePtr = F;
		F.line = 37;
		var score_state_186078 = -100;
		F.line = 38;
		var header_matched_186079 = false;
		F.line = 39;
		var unmatched_leading_char_count_186081 = 0;
		F.line = 40;
		var consecutive_match_count_186083 = 0;
		F.line = 41;
		var str_index_186085 = 0;
		F.line = 42;
		var pat_index_186087 = 0;
		F.line = 43;
		var score_186089 = 0;
		L1: do {
			F.line = 49;
				L2: while (true) {
				if (!((str_index_186085 < (str_186073 != null ? str_186073.length : 0)) && (pat_index_186087 < (pattern_186072 != null ? pattern_186072.length : 0)))) break L2;
					L3: do {
						F.line = 51;
						var pattern_char_186096 = nsuToLowerAsciiChar(pattern_186072.charCodeAt(chckIndx(pat_index_186087, 0, pattern_186072.length+0-1)-0));
						F.line = 52;
						var str_char_186097 = nsuToLowerAsciiChar(str_186073.charCodeAt(chckIndx(str_index_186085, 0, str_186073.length+0-1)-0));
						if ((ConstSet3[pattern_char_186096] != undefined)) {
						F.line = 56;
						pat_index_186087 = addInt(pat_index_186087, 1);
						F.line = 57;
						break L3;
						}
						
						if ((ConstSet4[str_char_186097] != undefined)) {
						F.line = 59;
						str_index_186085 = addInt(str_index_186085, 1);
						F.line = 60;
						break L3;
						}
						
						if ((!(header_matched_186079) && (str_char_186097 == 58))) {
						F.line = 65;
						header_matched_186079 = true;
						F.line = 66;
						score_state_186078 = -100;
						F.line = 67;
						score_186089 = Math.trunc(Math.floor((5.0000000000000000e-01 * score_186089)));
						F.line = 68;
						pat_index_186087 = 0;
						F.line = 69;
						str_index_186085 = addInt(str_index_186085, 1);
						F.line = 70;
						break L3;
						}
						
						if ((str_char_186097 == pattern_char_186096)) {
						F.line = 73;
						switch (score_state_186078) {
						case -100:
						case 20:
							F.line = 75;
							score_state_186078 = 10;
							break;
						case 0:
							F.line = 78;
							score_state_186078 = 5;
							F.line = 78;
							score_186089 = addInt(score_186089, score_state_186078);
							break;
						case 10:
						case 5:
							F.line = 81;
							consecutive_match_count_186083 = addInt(consecutive_match_count_186083, 1);
							F.line = 82;
							score_state_186078 = 5;
							F.line = 83;
							score_186089 = addInt(score_186089, mulInt(5, consecutive_match_count_186083));
							if ((score_state_186078 == 10)) {
							F.line = 86;
							score_186089 = addInt(score_186089, 10);
							}
							
							F.line = 88;
							var on_boundary_186172 = (pat_index_186087 == (pattern_186072 != null ? (pattern_186072.length-1) : -1));
							if ((!(on_boundary_186172) && (str_index_186085 < (str_186073 != null ? (str_186073.length-1) : -1)))) {
							F.line = 91;
							var next_pattern_char_186173 = nsuToLowerAsciiChar(pattern_186072.charCodeAt(chckIndx(addInt(pat_index_186087, 1), 0, pattern_186072.length+0-1)-0));
							F.line = 92;
							var next_str_char_186174 = nsuToLowerAsciiChar(str_186073.charCodeAt(chckIndx(addInt(str_index_186085, 1), 0, str_186073.length+0-1)-0));
							F.line = 95;
							if (!!((ConstSet5[next_str_char_186174] != undefined))) Tmp4 = false; else {								Tmp4 = !((next_str_char_186174 == next_pattern_char_186173));							}							on_boundary_186172 = Tmp4;
							}
							
							if (on_boundary_186172) {
							F.line = 100;
							score_state_186078 = 20;
							F.line = 100;
							score_186089 = addInt(score_186089, score_state_186078);
							}
							
							break;
						case -1:
						case -3:
							F.line = 103;
							if (!((ConstSet6[str_186073.charCodeAt(chckIndx(subInt(str_index_186085, 1), 0, str_186073.length+0-1)-0)] != undefined))) Tmp5 = true; else {								if (!(ConstSet7[str_186073.charCodeAt(chckIndx(subInt(str_index_186085, 1), 0, str_186073.length+0-1)-0)] != undefined)) Tmp6 = false; else {									Tmp6 = (ConstSet8[str_186073.charCodeAt(chckIndx(str_index_186085, 0, str_186073.length+0-1)-0)] != undefined);								}								Tmp5 = Tmp6;							}							var is_leading_char_186212 = Tmp5;
							if (is_leading_char_186212) {
							F.line = 110;
							score_state_186078 = 10;
							}
							else {
								F.line = 114;
								score_state_186078 = 0;
								F.line = 114;
								score_186089 = addInt(score_186089, score_state_186078);
							}
							
							break;
						}
						F.line = 115;
						pat_index_186087 = addInt(pat_index_186087, 1);
						}
						else {
							F.line = 118;
							switch (score_state_186078) {
							case -100:
								F.line = 120;
								score_state_186078 = -3;
								F.line = 120;
								score_186089 = addInt(score_186089, score_state_186078);
								break;
							case 5:
								F.line = 123;
								score_state_186078 = -1;
								F.line = 123;
								score_186089 = addInt(score_186089, score_state_186078);
								F.line = 124;
								consecutive_match_count_186083 = 0;
								break;
							case -3:
								if ((unmatched_leading_char_count_186081 < 3)) {
								F.line = 128;
								score_state_186078 = -3;
								F.line = 128;
								score_186089 = addInt(score_186089, score_state_186078);
								}
								
								F.line = 129;
								unmatched_leading_char_count_186081 = addInt(unmatched_leading_char_count_186081, 1);
								break;
							default: 
								F.line = 132;
								score_state_186078 = -1;
								F.line = 132;
								score_186089 = addInt(score_186089, score_state_186078);
								break;
							}
						}
						
						F.line = 134;
						str_index_186085 = addInt(str_index_186085, 1);
					} while(false);
				}
		} while(false);
		F.line = 136;
		nimCopy(result_186077, {Field0: nimMax(0, score_186089), Field1: (0 < score_186089)}, NTI186074);
	framePtr = F.prev;

	return result_186077;

}

function text_187105(s_187107) {
	var result_187108 = null;

	var F={procname:"dochack.text",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 26;
		result_187108 = document.createTextNode(toJSStr(s_187107));
	framePtr = F.prev;

	return result_187108;

}

function dosearch_188510(value_188512) {

		function HEX3Aanonymous_188670(a_188679, b_188680) {
			var result_188684 = 0;

			var F={procname:"dosearch.:anonymous",prev:framePtr,filename:"dochack.nim",line:0};
			framePtr = F;
				F.line = 305;
				result_188684 = subInt(b_188680["Field1"], a_188679["Field1"]);
			framePtr = F.prev;

			return result_188684;

		}

	var result_188513 = null;

	var F={procname:"dochack.dosearch",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		if (((db_188491[0] != null ? db_188491[0].length : 0) == 0)) {
		F.line = 272;
		var stuff_188519 = null;
		F.line = 273;
		    var request = new XMLHttpRequest();
    request.open("GET", "theindex.html", false);
    request.send(null);

    var doc = document.implementation.createHTMLDocument("theindex");
    doc.documentElement.innerHTML = request.responseText;

    //parser=new DOMParser();
    //doc=parser.parseFromString("<html></html>", "text/html");

    stuff_188519 = doc.documentElement;
    
		F.line = 286;
		db_188491[0] = nimCopy(null, stuff_188519.getElementsByClassName("reference"), NTI78245);
		F.line = 287;
		contents_188493[0] = nimCopy(null, [], NTI188532);
		L1: do {
			F.line = 288;
			var ahref_188614 = null;
			F.line = 3839;
			var i_188811 = 0;
			F.line = 3840;
			var l_188812 = (db_188491[0] != null ? db_188491[0].length : 0);
			L2: do {
				F.line = 3841;
					L3: while (true) {
					if (!(i_188811 < l_188812)) break L3;
						F.line = 288;
						ahref_188614 = db_188491[0][chckIndx(i_188811, 0, db_188491[0].length+0-1)-0];
						F.line = 289;
						if (contents_188493[0] != null) { contents_188493[0].push(ahref_188614.getAttribute("data-doc-search-tag")); } else { contents_188493[0] = [ahref_188614.getAttribute("data-doc-search-tag")]; };
						F.line = 3843;
						i_188811 = addInt(i_188811, 1);
						if (!(((db_188491[0] != null ? db_188491[0].length : 0) == l_188812))) {
						F.line = 3844;
						failed_assert_impl_62035(makeNimstrLit("/Users/travis/build/nim-lang/Nim/lib/system.nim(3844, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		}
		
		F.line = 290;
		var ul_188625 = tree_187020(makeNimstrLit("UL"), []);
		F.line = 291;
		result_188513 = tree_187020(makeNimstrLit("DIV"), []);
		F.line = 292;
		set_class_187088(result_188513, makeNimstrLit("search_results"));
		F.line = 293;
		var matches_188644 = [];
		L4: do {
			F.line = 294;
			var i_188656 = 0;
			F.line = 3113;
			var colontmp__188818 = 0;
			F.line = 294;
			colontmp__188818 = (db_188491[0] != null ? db_188491[0].length : 0);
			F.line = 3114;
			var i_188819 = 0;
			L5: do {
				F.line = 3115;
					L6: while (true) {
					if (!(i_188819 < colontmp__188818)) break L6;
						F.line = 294;
						i_188656 = i_188819;
						L7: do {
							F.line = 295;
							var c_188657 = contents_188493[0][chckIndx(i_188656, 0, contents_188493[0].length+0-1)-0];
							if (((c_188657 == "Examples") || (c_188657 == "PEG construction"))) {
							F.line = 300;
							break L7;
							}
							
							F.line = 301;
							var colontmp__188828 = {Field0: 0, Field1: false};
							F.line = 301;
							var score_188658 = 0;
							F.line = 301;
							var matched_188659 = false;
							F.line = 301;
							nimCopy(colontmp__188828, fuzzy_match_186070(value_188512, c_188657), NTI186074);
							F.line = 301;
							score_188658 = colontmp__188828["Field0"];
							F.line = 301;
							matched_188659 = colontmp__188828["Field1"];
							if (matched_188659) {
							F.line = 303;
							if (matches_188644 != null) { matches_188644.push({Field0: db_188491[0][chckIndx(i_188656, 0, db_188491[0].length+0-1)-0], Field1: score_188658}); } else { matches_188644 = [{Field0: db_188491[0][chckIndx(i_188656, 0, db_188491[0].length+0-1)-0], Field1: score_188658}]; };
							}
							
						} while(false);
						F.line = 3117;
						i_188819 = addInt(i_188819, 1);
					}
			} while(false);
		} while(false);
		F.line = 305;
		matches_188644.sort(HEX3Aanonymous_188670);
		L8: do {
			F.line = 306;
			var i_188722 = 0;
			F.line = 3113;
			var colontmp__188824 = 0;
			F.line = 306;
			colontmp__188824 = nimMin((matches_188644 != null ? matches_188644.length : 0), 19);
			F.line = 3114;
			var i_188825 = 0;
			L9: do {
				F.line = 3115;
					L10: while (true) {
					if (!(i_188825 < colontmp__188824)) break L10;
						F.line = 306;
						i_188722 = i_188825;
						F.line = 307;
						matches_188644[chckIndx(i_188722, 0, matches_188644.length+0-1)-0]["Field0"].innerHTML = matches_188644[chckIndx(i_188722, 0, matches_188644.length+0-1)-0]["Field0"].getAttribute("data-doc-search-tag");
						F.line = 308;
						add_187070(ul_188625, tree_187020(makeNimstrLit("LI"), [matches_188644[chckIndx(i_188722, 0, matches_188644.length+0-1)-0]["Field0"]]));
						F.line = 3117;
						i_188825 = addInt(i_188825, 1);
					}
			} while(false);
		} while(false);
		if ((ul_188625.childNodes.length == 0)) {
		F.line = 310;
		add_187070(result_188513, tree_187020(makeNimstrLit("B"), [text_187105(makeNimstrLit("no search results"))]));
		}
		else {
			F.line = 312;
			add_187070(result_188513, tree_187020(makeNimstrLit("B"), [text_187105(makeNimstrLit("search results"))]));
			F.line = 313;
			add_187070(result_188513, ul_188625);
		}
		
	framePtr = F.prev;

	return result_188513;

}

function search() {

		function wrapper_188759() {
			var F={procname:"search.wrapper",prev:framePtr,filename:"dochack.nim",line:0};
			framePtr = F;
				F.line = 320;
				var elem_188761 = document.getElementById("searchInput");
				F.line = 321;
				var value_188762 = elem_188761.value;
				if (!(((value_188762 != null ? value_188762.length : 0) == 0))) {
				if ((oldtoc_188742[0] == null)) {
				F.line = 324;
				oldtoc_188742[0] = document.getElementById("tocRoot");
				}
				
				F.line = 325;
				var results_188768 = dosearch_188510(value_188762);
				F.line = 326;
				replace_by_id_187142("tocRoot", results_188768);
				}
				else {
				if (!((oldtoc_188742[0] == null))) {
				F.line = 328;
				replace_by_id_187142("tocRoot", oldtoc_188742[0]);
				}
				}
			framePtr = F.prev;

			
		}

	var F={procname:"dochack.search",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		if (!((timer_188743[0] == null))) {
		F.line = 330;
		clearTimeout(timer_188743[0]);
		}
		
		F.line = 331;
		timer_188743[0] = setTimeout(wrapper_188759, 400);
	framePtr = F.prev;

	
}
